class Album{static URL="https://jsonplaceholder.typicode.com/photos?albumId=";static request(t="",e="GET",s){return fetch(Album.URL+t,{method:e,body:s?JSON.stringify(s):void 0,headers:{"Content-type":"application/json"}}).catch(t=>{throw new Error(""+t.message)})}static getImgByAlbumID(t){return Album.request(t).then(t=>{if(t.ok)return t.json();throw new Error("Can't get images.")})}}class Albums{static URL="https://jsonplaceholder.typicode.com/albums";static request(t="",e="GET",s){return fetch(Albums.URL+t,{method:e,body:s?JSON.stringify(s):void 0,headers:{"Content-type":"application/json"}}).catch(t=>{throw new Error(""+t.message)})}static getList(){return Albums.request().then(t=>{if(t.ok)return t.json();throw new Error("Can't get the list of albums.")})}}class LinksCollection{#list;fetch(){return Albums.getList().then(t=>{this.setList(t)})}setList(t){this.#list=t}getList(){return this.#list}getFirstId(){return this.#list[0].id}}class AlbumsCollection{#collection=[];fetch(t){return Album.getImgByAlbumID(t).then(t=>{this.setList(t)})}setList(t){this.#collection=t}getList(){return this.#collection}}class LinksView{static ALBUMS_LIST_SELECTOR="#linksList";static ALBUMS_ITEM_SELECTOR=".links_container__item";#$list;#options;constructor(t){this.#$list=$(LinksView.ALBUMS_LIST_SELECTOR).on("click",LinksView.ALBUMS_ITEM_SELECTOR,t=>this.onAlbumsListClick(t)),this.#options=t}onAlbumsListClick(t){t.preventDefault();t=this.getAlbumId(t.target);this.#options.onSelect(t)}renderAlbumsList(t){t=t.map(t=>this.generateHtmlLinks(t)).join("");this.#$list.html(t)}appendTo(t){t.append(this.#$list)}getAlbumId(t){return t.closest(LinksView.ALBUMS_ITEM_SELECTOR)?.dataset.id}generateHtmlLinks(t){return` 
        <li class="links_container__item" data-id="${t.id}">
            <a class="links_container__link" href="https://jsonplaceholder.typicode.com/photos?albumId=${t.userId}">${t.title}</a>
        </li>
    `}}class AlbumsView{static IMAGES_CONTAINER_SELECTOR="#imgContainer";#$gallery;constructor(){this.#$gallery=$(AlbumsView.IMAGES_CONTAINER_SELECTOR)}appendTo(t){t.append(this.#$gallery)}renderImgList(t){this.#$gallery.innerHTML="";t=t.map(t=>this.generateImages(t)).join("");this.#$gallery.html(t)}generateImages(t){return`
    <li class="img_container__item">
        <img src="${t.url}" alt="${t.id}">
    </li>
    `}}class LinksController{#$rootContainer;#albumsController;constructor(t,e){this.#$rootContainer=t,this.#albumsController=e,this.collection=new LinksCollection,this.linksView=new LinksView({onSelect:t=>e.loadAlbumById(t)}),this.linksView.appendTo(this.#$rootContainer),this.collection.fetch().then(()=>this.renderList()).then(()=>this.loadFirstAlbum())}renderList(){this.linksView.renderAlbumsList(this.collection.getList())}loadFirstAlbum(){var t=this.collection.getFirstId();this.#albumsController.loadAlbumById(t)}}class AlbumsController{#$rootAlbumContainer;constructor(t){this.#$rootAlbumContainer=t,this.collection=new AlbumsCollection,this.albumView=new AlbumsView,this.albumView.appendTo(this.#$rootAlbumContainer)}renderList(){this.albumView.renderImgList(this.collection.getList())}loadAlbumById(t){this.collection.fetch(t).then(()=>this.renderList())}}const albumsController=new AlbumsController($("#imgContainer"));new LinksController($("#linksList"),albumsController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,